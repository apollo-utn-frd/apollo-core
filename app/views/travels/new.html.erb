<div class="travel_create row">
    <div class="col-4">
      <div class="title-row row">Creacion de Ruta de Viaje</div>
      <div class="option-row row">Hola 1</div>
      <div class="option-row row">Hola 2</div>
      <div class="option-row row">Hola 3</div>
    </div>
    <div class="col-8">
      <input id="pac-input" class="controls" type="text" placeholder="Buscar">
      <div id="map"></div>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRh-5s4Vh3ED5qk3ehiXLUkW7DBJkYntI&libraries=places&language=es&region=AR"></script>
        <script>
          var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -34.397, lng: 150.644},
            zoom: 8
          });
        </script>
    </div>
</div>


<script>
var markers = []
const mkMarker = (map, lat, lang, title) => {
  return new google.maps.Marker({
    position: {lat: lat, lng: lang},
    map: map,
    title: title
  })
}

map.addListener('click', e => {
  const m = mkMarker(map, e.latLng.lat(), e.latLng.lng(), "hola")
  markers.push(m)
})

map.addListener('mousedown', e => {
  if (e.wa.buttons === 2) {
    removedMarker = markers.pop()
    removedMarker.setMap(null)
  }
})

const initAutocomplete = (map) => {
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }


    // Bias the SearchBox results towards current map's viewport.
    map.addListener('bounds_changed', () => searchBox.setBounds(map.getBounds()))

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      if (!place.geometry) {
        console.log("Returned place contains no geometry");
        return;
      }
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      if (place.geometry.viewport) {
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    })
    map.fitBounds(bounds)
});
}


initAutocomplete(map)

</script>
